# Generated by Django 2.1.1 on 2018-09-03 17:14

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('school_name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='username')),
                ('address', models.CharField(max_length=300)),
                ('password', models.CharField(max_length=500)),
                ('affliation', models.CharField(max_length=200)),
                ('year_of_establishment', models.IntegerField()),
                ('postal_code', models.CharField(max_length=6)),
                ('school_landline', models.CharField(max_length=15)),
                ('school_mobile', models.CharField(max_length=15)),
                ('school_type', models.CharField(max_length=50)),
                ('school_email', models.EmailField(max_length=254)),
                ('account_creation_date', models.DateTimeField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'list_of_tesch_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
